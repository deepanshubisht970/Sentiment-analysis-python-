import tkinter
from tkinter import scrolledtext
from tkinter import messagebox
from tkinter.filedialog import askopenfile
import tkinter.font as font
from textblob import TextBlob

def mainProgram():
    m = tkinter.Tk()

    def reset():
        m.destroy()
        mainProgram()

    # This function is for Message Box for an empty data entry
    def errorMessage():
       messagebox.showinfo("Error", "Enter data to do Sentiment Analysis")

    # This function will be used to open
    # file in read mode and only Text Files will be opened
    def open_file():
        file = askopenfile(mode ='r', filetypes =[('Text Files', '*.txt')])
        fileContent = file.read()
        # print(fileContent)
        textOutputFile = scrolledtext.ScrolledText(m, width=60)
        textOutputFile.place(height=300, x=15, y=80)
        textOutputFile.config(foreground="black", wrap='word')
        textOutputFile.insert(tkinter.END, fileContent)

        def fileOutput(arg=None):
            obj = TextBlob(fileContent)
            degree = obj.polarity
            if (degree > 0):
                msg = '\n>> its a positive content\n\n>> Positive accuracy = '
                print('its a positive content')
                per = degree / 1 * 100
                print('Positive accuracy = ', per)
                fileResult = msg + str(per)
            elif (degree < 0):
                msg = '\n>> its a negative content\n\n>> Negative accuracy = '
                print('its a negative content')
                per = -1 * degree / 1 * 100
                print('Negative accuracy = ', per, '%')
                fileResult = msg + str(per)
            elif (degree == 0.0):
                msg = '\n>> its a neutral content\n\n>> Hence its polarity is Zero'
                print('Neutral')
                fileResult = msg
            out = obj.sentiment_assessments
            print(out)
            # textOutput = scrolledtext.ScrolledText(m, width=36, height=11)
            # textOutput.place(x=526, y=80)
            # textOutput.config(foreground="black", wrap='word')  # background="light grey", , font='times 12 bold'
            # textOutput.insert(tkinter.END, fileResult)
            textOutput = tkinter.Text(width=38, height=11, bg='#000000', fg='#ffffff')
            textOutput.place(x=526, y=80)
            textOutput.config(wrap='word')
            textOutput.insert(tkinter.END, fileResult)

        analyzeButton = tkinter.Button(text='Analyze', command=fileOutput)
        analyzeButton.place(x=530, y=350)
        analyzeButtonFont = font.Font(family='Courier', size=21)
        analyzeButton['font'] = analyzeButtonFont

    openButton = tkinter.Button(text=' OPEN ', command=open_file, bg='#008b8b', fg='#ffffff')
    openButton.place(x=690, y=280)
    openButtonFont = font.Font(family='Courier', size=21)
    openButton['font'] = openButtonFont

    # This is the main function that takes input from Entry Fields
    # and finally analyze the data and gave out put on the bases of entered data
    def output(arg=None):
        val = mainScrollText.get("1.0","end-1c")
        if val != '':
            obj = TextBlob(val)
            degree = obj.polarity
            if (degree > 0):
                msg = '\n>> its a positive content\n\n>> Positive accuracy = '
                print('its a positive content')
                per = degree / 1 * 100
                print('Positive accuracy = ', per)
                result = msg + str(per)
            elif (degree < 0):
                msg = '\n>> its a negative content\n\n>> Negative accuracy = '
                print('its a negative content')
                per = -1 * degree / 1 * 100
                print('Negative accuracy = ', per,'%')
                result = msg + str(per)
            elif (degree == 0.0):
                msg = '\n>> its a neutral content\n\n>> Hence its polarity is Zero'
                print('Neutral')
                result = msg
            out = obj.sentiment_assessments
            print(out)
            textOutput = tkinter.Text(width=38, height=11, bg='#000000', fg='#ffffff')
            textOutput.place(x=526, y=80)
            textOutput.config(wrap='word')
            textOutput.insert(tkinter.END, result)
            # textOutput = scrolledtext.ScrolledText(m, width=36, height=11)
            # textOutput.place(x=526, y=80)
            # textOutput.config(foreground="black", wrap='word')  # background="light grey", , font='times 12 bold'
            # textOutput.insert(tkinter.END, result)
        else:
            errorMessage()

    label = tkinter.Label(text='***SENTIMENT ANALYZER***', fg='#ffffff', bg='#0CCBFA')
    label.place(x=190, y=20)
    lableFont = font.Font(family='Courier', size=24, weight='bold')
    label['font'] = lableFont

    mainScrollText = scrolledtext.ScrolledText(m, width=60)
    mainScrollText.place(height=300, x=15, y=80)
    mainScrollText.config(foreground="black", wrap='word')
    #mainScrollText.insert(tkinter.INSERT, "\n>> Enter Your Sample Text For Its Sentiment Analysis")

    # outputBoxForShow = scrolledtext.ScrolledText(m, width=36, height=11, bg='#000000')
    # outputBoxForShow.place(x=526, y=80)
    # outputBoxForShow.config(foreground="white", wrap='word')
    # outputBoxForShow.insert(tkinter.INSERT, ">> CONSOLE")
    outputBoxForShow = tkinter.Text(width=38, height=11, bg='#000000', fg='#ffffff')
    outputBoxForShow.place(x=526, y=80)
    outputBoxForShow.insert(tkinter.INSERT, '\n>> CONSOLE \n\n>> YOUR OUTPUT WILL BE SHOWN HERE')

    analyzeButton = tkinter.Button(text='Analyze', command=output)
    analyzeButton.place(x=530, y=350)
    analyzeButtonFont = font.Font(family='Courier', size=21)
    analyzeButton['font'] = analyzeButtonFont

    resetButton = tkinter.Button(text=' RESET ', command=reset)
    resetButton.place(x=530, y=280)
    resetButtonFont = font.Font(family='Courier', size=21)
    resetButton['font'] = resetButtonFont

    exitButton = tkinter.Button(text=' EXIT ', command=m.destroy, bg='#ff0000', fg='#ffffff')
    exitButton.place(x=690, y=350)
    exitButtonFont = font.Font(family='Courier', size=21)
    exitButton['font'] = exitButtonFont

    m.title("Sentiment Analyzer")
    m.configure(background='#0CCBFA')
    m.geometry("850x425+250+80")  # Width x Height + left + top
    m.resizable(0, 0)  #Don't allow resizing in the x or y direction
    m.mainloop()

mainProgram()
